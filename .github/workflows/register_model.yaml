name: Register Model to W&B Registry

on:
  # Manual trigger
  workflow_dispatch:
    inputs:
      run_id:
        description: 'W&B Run ID to register'
        required: true
      registry_entity:
        description: 'W&B registry entity'
        required: false
        default: ''
      project:
        description: 'W&B project name'
        required: false
        default: ''
      model_name:
        description: 'Model name in registry'
        required: false
        default: ''
  
  # Trigger on PR comment containing /register_model
  issue_comment:
    types: [created]

jobs:
  register-model:
    # Only run on PR comments containing the command
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request && 
       contains(github.event.comment.body, '/register_model'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract parameters
        id: params
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            COMMENT="${{ github.event.comment.body }}"
            # Extract run ID after /register_model command
            RUN_ID=$(echo "$COMMENT" | grep -oP '/register_model\s+\K[^\s]+')
            # Check if comment has format: /register_model <run_id> <entity> <project> <model_name>
            if [[ "$COMMENT" =~ /register_model\ +([^ ]+)\ +([^ ]+)\ +([^ ]+)\ +([^ ]+) ]]; then
              REGISTRY_ENTITY="${BASH_REMATCH[2]}"
              PROJECT="${BASH_REMATCH[3]}"
              MODEL_NAME="${BASH_REMATCH[4]}"
              COLLECTION_PATH="$REGISTRY_ENTITY/$PROJECT/$MODEL_NAME"
            else
              COLLECTION_PATH="${{ secrets.WANDB_MODEL_REGISTRY_COLLECTION_PATH }}"
            fi
          else
            RUN_ID="${{ github.event.inputs.run_id }}"
            REGISTRY_ENTITY="${{ github.event.inputs.registry_entity }}"
            PROJECT="${{ github.event.inputs.project }}"
            MODEL_NAME="${{ github.event.inputs.model_name }}"
            if [[ -n "$REGISTRY_ENTITY" && -n "$PROJECT" && -n "$MODEL_NAME" ]]; then
              COLLECTION_PATH="$REGISTRY_ENTITY/$PROJECT/$MODEL_NAME"
            else
              COLLECTION_PATH="${{ secrets.WANDB_MODEL_REGISTRY_COLLECTION_PATH }}"
            fi
          fi
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
          echo "collection_path=$COLLECTION_PATH" >> $GITHUB_OUTPUT
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.31"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      
      - name: Install the project
        run: uv sync --all-extras
      
      - name: Register model
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
          WANDB_MODEL_REGISTRY_COLLECTION_PATH: ${{ steps.params.outputs.collection_path }}
        run: |
          RUN_ID="${{ steps.params.outputs.run_id }}"
          if [ -z "$RUN_ID" ]; then
            echo "‚ùå No run ID provided"
            exit 1
          fi
          echo "üöÄ Registering model from run: $RUN_ID"
          uv run src/baq/action_files/register_model.py --run-id "$RUN_ID"
      
      - name: Comment on PR
        if: github.event_name == 'issue_comment'
        uses: actions/github-script@v6
        with:
          script: |
            const runId = process.env.RUN_ID;
            const workflowUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ü§ñ Model registration workflow completed!\n\n` +
                    `- Run ID: \`${runId}\`\n` +
                    `- Workflow: [View logs](${workflowUrl})\n\n` +
                    `Check the workflow logs for registration status.`
            });
