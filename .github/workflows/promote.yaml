name: Promote ML Model

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      run_id:
        description: 'W&B Run ID to promote'
        required: true
        type: string
      target:
        description: 'Target environment (staging or production)'
        required: false
        default: 'staging'
        type: choice
        options:
          - staging
          - production
      issue_number:
        description: 'PR number to comment on (for manual runs)'
        required: false
        type: number

jobs:
  promote-model:
    if: |
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request && 
       startsWith(github.event.comment.body, '/promote')) || 
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    name: Promote Model in W&B Registry
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract parameters
        id: params
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            COMMENT="${{ github.event.comment.body }}"
            RUN_ID=$(echo "$COMMENT" | awk '{print $2}')
            TARGET=$(echo "$COMMENT" | awk '{print $3}')
            ISSUE_NUM="${{ github.event.issue.number }}"
            
            # Default to staging if not specified
            if [[ -z "$TARGET" ]]; then
              TARGET="staging"
            fi
          else
            RUN_ID="${{ github.event.inputs.run_id }}"
            TARGET="${{ github.event.inputs.target }}"
            ISSUE_NUM="${{ github.event.inputs.issue_number }}"
          fi
          
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
          echo "target=$TARGET" >> $GITHUB_OUTPUT
          echo "issue_number=$ISSUE_NUM" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: pip install wandb

      - name: Promote model
        id: promote
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
          WANDB_REGISTRY_ENTITY: ${{ secrets.WANDB_REGISTRY_ENTITY || 'chogerlate' }}
          WANDB_PROJECT: ${{ secrets.WANDB_PROJECT || 'wandb-registry-model' }}
          MODEL_NAME: ${{ secrets.WANDB_MODEL_NAME || 'baq-forecastors' }}
        run: |
          python action_files/model_promote.py \
            --run-id "${{ steps.params.outputs.run_id }}" \
            --target "${{ steps.params.outputs.target }}" \
            --entity "$WANDB_REGISTRY_ENTITY" \
            --project "$WANDB_PROJECT" \
            --model-name "$MODEL_NAME" > promotion_output.txt
          
          # Save outputs for the comment step
          if grep -q "::error::" promotion_output.txt; then
            ERROR=$(grep "::error::" promotion_output.txt | sed 's/::error:://')
            echo "status=error" >> $GITHUB_OUTPUT
            echo "message=❌ $ERROR" >> $GITHUB_OUTPUT
          else
            MODEL_VERSION=$(grep "::set-output name=model_version::" promotion_output.txt | sed 's/::set-output name=model_version:://')
            ARTIFACT_PATH=$(grep "::set-output name=artifact_path::" promotion_output.txt | sed 's/::set-output name=artifact_path:://')
            echo "status=success" >> $GITHUB_OUTPUT
            echo "message=✅ Successfully promoted model to ${{ steps.params.outputs.target }}" >> $GITHUB_OUTPUT
            echo "model_version=$MODEL_VERSION" >> $GITHUB_OUTPUT
            echo "artifact_path=$ARTIFACT_PATH" >> $GITHUB_OUTPUT
          fi
          
          cat promotion_output.txt

      - name: Comment on PR
        if: steps.params.outputs.issue_number != ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ steps.params.outputs.issue_number }}
          body: |
            ## 🚀 Model Promotion Result
            
            ${{ steps.promote.outputs.message }}
            
            **Details:**
            - **Run ID:** `${{ steps.params.outputs.run_id }}`
            - **Target:** `${{ steps.params.outputs.target }}`
            ${{ steps.promote.outputs.status == 'success' && format('- **Model Version:** `{0}`', steps.promote.outputs.model_version) || '' }}
            ${{ steps.promote.outputs.status == 'success' && format('- **Artifact Path:** `{0}`', steps.promote.outputs.artifact_path) || '' }}
            
            ---
            *Use `/promote <run_id> [staging|production]` to promote a model*