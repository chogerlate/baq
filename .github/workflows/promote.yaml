name: Promote Model
on:
  issue_comment:
    types: [created]

jobs:
  promote-model:
    if: github.event.issue.pull_request != null && startsWith(github.event.comment.body, '/promote')
    runs-on: ubuntu-latest
    steps:
      - name: Extract Run ID and Target
        id: extract
        run: |
          COMMENT="${{ github.event.comment.body }}"
          RUN_ID=$(echo "$COMMENT" | awk '{print $2}')
          TARGET=$(echo "$COMMENT" | awk '{print $3}')
          # Default to staging if not specified
          if [ -z "$TARGET" ]; then
            TARGET="staging"
          fi
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
          echo "target=$TARGET" >> $GITHUB_OUTPUT
          
      - name: Checkout repository
        uses: actions/checkout@v4
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: Install wandb
        run: |
          pip install wandb
          
      - name: Promote model
        id: promote
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
          WANDB_ENTITY: ${{ secrets.WANDB_ENTITY }}
          WANDB_PROJECT: ${{ secrets.WANDB_PROJECT }}
          MODEL_NAME: ${{ secrets.WANDB_MODEL_NAME || 'baq-forecastors' }}
        run: |
          cat > run_promotion.py << 'EOF'
          import os
          import sys
          sys.path.append('./action_files')
          from model_promote import promote_model
          
          entity = os.getenv('WANDB_ENTITY', 'chogerlate')
          project = os.getenv('WANDB_PROJECT', 'wandb-registry-model')
          model_name = os.getenv('MODEL_NAME', 'baq-forecastors')
          run_id = '${{ steps.extract.outputs.run_id }}'
          target = '${{ steps.extract.outputs.target }}'
          
          try:
              promote_model(
                  run_id=run_id,
                  target=target,
                  entity=entity,
                  project=project,
                  model_name=model_name
              )
              with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
                  f.write(f"result=✅ Successfully promoted model to {target} from run {run_id}\n")
                  
          except Exception as e:
              error_msg = f"❌ Error promoting model: {str(e)}"
              with open(os.environ['GITHUB_OUTPUT'], 'a') as f:
                  f.write(f"result={error_msg}\n")
          EOF
          
          python run_promotion.py
          
      - name: Comment result on PR
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.issue.number }}
          body: |
            ## 🚀 Model Promotion Result
            
            ${{ steps.promote.outputs.result }}
            
            ---
            *Use `/promote <run_id> <staging|production>` to promote a model*