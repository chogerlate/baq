name: Model Registry Report

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      registry_entity:
        description: 'W&B registry entity'
        required: false
        default: ''
      project:
        description: 'W&B project name'
        required: false
        default: ''
      model_name:
        description: 'Model name in registry'
        required: false
        default: ''
      issue_number:
        description: 'PR number to comment on (for manual runs)'
        required: false
        type: number

jobs:
  get-registry-models:
    if: |
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request && 
       contains(github.event.comment.body, '/registry_report')) || 
      github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Extract parameters
        id: params
        run: |
          if [[ "${{ github.event_name }}" == "issue_comment" ]]; then
            ISSUE_NUM="${{ github.event.issue.number }}"
            COMMENT="${{ github.event.comment.body }}"
            if [[ "$COMMENT" =~ /registry_report\ +([^ ]+)\ +([^ ]+)\ +([^ ]+) ]]; then
              REGISTRY_ENTITY="${BASH_REMATCH[1]}"
              PROJECT="${BASH_REMATCH[2]}"
              MODEL_NAME="${BASH_REMATCH[3]}"
              COLLECTION_PATH="$REGISTRY_ENTITY/$PROJECT/$MODEL_NAME"
            else
              COLLECTION_PATH="${{ secrets.WANDB_MODEL_REGISTRY_COLLECTION_PATH }}"
            fi
          else
            ISSUE_NUM="${{ github.event.inputs.issue_number }}"
            REGISTRY_ENTITY="${{ github.event.inputs.registry_entity }}"
            PROJECT="${{ github.event.inputs.project }}"
            MODEL_NAME="${{ github.event.inputs.model_name }}"
            if [[ -n "$REGISTRY_ENTITY" && -n "$PROJECT" && -n "$MODEL_NAME" ]]; then
              COLLECTION_PATH="$REGISTRY_ENTITY/$PROJECT/$MODEL_NAME"
            else
              COLLECTION_PATH="${{ secrets.WANDB_MODEL_REGISTRY_COLLECTION_PATH }}"
            fi
          fi
          echo "issue_number=$ISSUE_NUM" >> $GITHUB_OUTPUT
          echo "collection_path=$COLLECTION_PATH" >> $GITHUB_OUTPUT
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.5.31"
          enable-cache: true
          cache-dependency-glob: "uv.lock"
      
      # Install Python
      - name: "Set up Python"
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
      
      # Install dependencies
      - name: Install the project
        run: uv sync --all-extras

      # Run registry report script
      - name: Run registry report script
        env:
          WANDB_API_KEY: ${{ secrets.WANDB_API_KEY }}
          WANDB_MODEL_REGISTRY_COLLECTION_PATH: ${{ steps.params.outputs.collection_path }}
        run: |
          uv run src/baq/action_files/get_registry_models.py
      
      # Debug - Show generated report
      - name: Debug - Show generated report
        run: |
          echo "Generated report content:"
          cat model_registry_report.md || echo "Report file not found. Checking for alternative file..."
          ls -la *.md
      
      # Comment on PR
      - name: Comment on PR
        if: steps.params.outputs.issue_number != ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          token: ${{ secrets.BOT_TOKEN }}
          issue-number: ${{ steps.params.outputs.issue_number }}
          body-file: model_registry_report.md
          
    #   - name: Upload report as artifact
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: model-registry-report
    #       path: model_registry_report.md
    #       retention-days: 90